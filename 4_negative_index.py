###########################################################
#######[-n] = [len(s)-n]
###########################################################
string0 = "12345"
print((string0[-1]) == (string0[4]))

string1 = "I'm king of the world."
print (string1[4:-1])
print (string1[-6:-1])

print (string1[::-1])
###########################################################
#######切片：s[a:b:c]，最左边的索引 a 代表截取序列的起始位置，包括该起始位置元素，
#######中间的索引 b 代表截止位置，但不包括该截止位置位置上的元素，
#######最右边的 c 代表步长。运算符[]里可以置空起始位置，截止位置，还有步长。
##########################################################
string2=[1,2,3,4,5,6,7,8,9]
print (string2[0:9:2])
###########################################################
#######切片对象,需要注意使用的范围
#######对于 seq[key] 的求值，如果 key 的类型不正确会引发 TypeError
#######key 为序列索引集范围之外的值，则会引发 IndexError
##########################################################
slice_obj = slice(2, -1, 3) # 使用 slice() 函数创建一个下界为2，上界为-1，步长为3的切片对象
seq = "0123456789"
print(seq[slice_obj]) # 打印'258'，该调用等同于切片表达式seq[2:-1:3]
print(slice_obj.start) # 打印2